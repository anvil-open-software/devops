# Copyright 2018 Dematic, Corp.  # Licensed under the MIT Open Source License: https://opensource.org/licenses/MIT
---
# generic wrapper to create a cluster with data disks attached
#
# input variables:
# cluster_member_private_ips_csv - comma separated list of private ip addresses
#  see readme for tag management
# ansible-playbook -i $DEVOPS_CONFIG_PATH/ansible/roles/YARN/inventory/azure-provision-devops -c local azure-provision-cluster-members.yml --private-key /dematic/keys/google/gcp-devops -u devops


- hosts: localhost
  vars:
     vm_name_prefix: "{{app_name}}-{{app_cluster_name}}-{{app_cluster_member_type}}"
     nic_name_prefix: "nic-{{vm_name_prefix}}"
     storage_account_type_default: "Premium_LRS"
     cluster_member_names: []

  tasks:
    - include_vars: "{{azure_global_var_file}}"
    - include_vars: "{{azure_resource_group_var_file}}"
    - set_fact: cluster_member_private_ips="{{cluster_member_private_ips_csv.split(',')}}"

    # if vm is in failure state, then it may not have disk and  remove_on_absent option will fail
    - block:
      - name: "remove vm and disk to start from scratch"
        azure_rm_virtualmachine:
          auth_source: "msi"
          resource_group: "{{azure_resource_group}}"
          name: "{{vm_name_prefix}}-{{ item.replace('.','-') }}"
          state: absent
          remove_on_absent:
            - virtual_storage
        with_items: "{{cluster_member_private_ips}}"

      - name: "Create network interfaces with private IP address {{cluster_member_private_ips_csv}}"
        azure_rm_networkinterface:
          name: "{{nic_name_prefix}}-{{ item.replace('.','-') }}"
          resource_group: "{{azure_resource_group}}"
          location:  "{{azure_location}}"
          virtual_network:  "{{azure_vnet_fq}}"
          subnet_name: "{{azure_subnet_name}}"
          create_with_security_group: no
          security_group: "{{azure_security_group}}"
          ip_configurations:
            - name: ipconfig1
              primary: True
              private_ip_allocation_method: Static
              private_ip_address: "{{item}}"
        with_items: "{{cluster_member_private_ips}}"
        async: "{{async_task_completion_seconds}}"
        poll: 0
        register: async_results

      - name: "Check async results"
        include: tasks/check-async-results.yml


      - name: "Provision VM for {{vm_name_prefix}}"
        azure_rm_virtualmachine:
          auth_source: "msi"
          state: present
          subscription_id: "{{azure_subscription_id}}"
          resource_group: "{{azure_resource_group}}"
          name: "{{vm_name_prefix}}-{{ item.replace('.','-') }}"
          vm_size: "{{azure_vm_size|default(azure_vm_size_default)}}"
          admin_username: "{{azure_admin_user}}"
          ssh_password_enabled: no
          ssh_public_keys:
            - path: "/home/{{azure_admin_user}}/.ssh/authorized_keys"
              key_data: "{{azure_admin_user_public_key}}"
          network_interface_names: "{{nic_name_prefix}}-{{ item.replace('.','-') }}"
          location:  "{{azure_location}}"
          public_ip_allocation_method: Disabled
          os_type: "Linux"
          image:
            offer: "{{azure_image_offer}}"
            publisher: "{{azure_image_publisher}}"
            sku:  "{{azure_image_sku}}"
            version: "{{azure_image_version}}"
          managed_disk_type: "{{azure_storage_account_type|default(storage_account_type_default)}}"
          tags:
            app-category: "{{app_category}}"
            app-name: "{{app_name}}"
            app-cluster-member-type: "{{app_cluster_member_type}}"
            app-cluster-id: "{{app_cluster_name}}"
            app-combo-id: "{{app_name}}_{{app_cluster_name}}"
            prometheus_job_name: "{{prometheus_job_name}}"
        with_items: "{{cluster_member_private_ips}}"
        async: "{{async_task_completion_seconds}}"
        poll: 0
        register: async_results

      - name: "Check async results"
        include: tasks/check-async-results.yml

      when: azure_provision_vms

    - name: "Wait for SSH to come up"
      wait_for: host="{{ item }}" port=22 delay={{ssh_wait_delay_seconds}} timeout={{ssh_timeout_seconds}} state=started
      with_items: "{{cluster_member_private_ips}}"


    - name: "Add data disk if vm_data_disk_create={{vm_data_disk_create}} is true"
      block:
        - name: "set vm names array"
          set_fact:
            cluster_member_names: "{{ cluster_member_names }} + [ '{{vm_name_prefix}}-{{ item.replace('.','-') }}' ]"
          with_items: "{{ cluster_member_private_ips }}"

        - name: "Create data disk"
          include: tasks/disk/azure-add-data-disk.yml data_disk_index="0"
      when: vm_data_disk_create


# disk creation through ansible does not do the linux mount and must ben done as a separate step
- hosts: linux_data_disk
  tasks:
    - name: "Create a filesystem on /dev/sdbc and mount, update fstab etc"
      include: tasks/disk/mount-data-disk.yml
      become: yes
      vars:
        disk_additional_disks:
        - disk: "/dev/sdc"
          fstype: "{{file_system_type|default(file_system_type_default)}}"
          part: "/dev/sdc"
          mount: /data_1
          mount_options: "{{disk_mount_options_override|default(disk_mount_options_default)}}"
          dump: 1
          pass_num: 2
          user: "{{data_disk_user}}"
          group: "{{data_disk_user}}"
          disable_periodic_fsck: false
      when: vm_data_disk_create


