{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template for nginx as reverse proxy to forward to private Jenkins",

  "Parameters" : {

    "KeyPair" : {
      "Description" : "Existing EC2 KeyPair",
      "Type" : "AWS::EC2::KeyPair::KeyName"
    },

    "VPC" : {
      "Description" : "Target VPC",
      "Type": "AWS::EC2::VPC::Id"
    },


    "PublicSubnet" : {
      "Description" : "VPC Public Subnet Id",
      "Type" : "AWS::EC2::Subnet::Id"
    },

    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro","t2.small"],
      "ConstraintDescription" : "Limited to low powered EC2 instance types."
    },

    "PrivateJenkinsAddress" : {
      "Description" : "I.P. Address of Internal Jenkins Server",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "10.x.x.x,
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription" : "must be a valid I.P. x.x.x.x"
    },

    "SecurityGroup" : {
      "Description" : "Target Security Group",
      "Type" : "AWS::EC2::SecurityGroup::Id"
    }

  },

  "Mappings" : {
    "AMIRegionMap": {
      "us-east-1": {"AMI": "ami-eb29d780"}
    }
  },

  "Resources" : {


    "WebServer": {
       "Type": "AWS::EC2::Instance",

      "Properties": {
        "InstanceType"   : { "Ref" : "InstanceType" },
        "ImageId" : { "Fn::FindInMap" : [ "AMIRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
        "KeyName"  : { "Ref" : "KeyPair" },
        "NetworkInterfaces" : [{
          "GroupSet"                 : [{ "Ref" : "SecurityGroup" }],
          "AssociatePublicIpAddress" : "true",
          "DeviceIndex"              : "0",
          "DeleteOnTermination"      : "true",
          "SubnetId"                 : { "Ref" : "PublicSubnet" }
        }],

        "Tags" : [
          { "Key" : "Name", "Value" : "dev-api-gateway" }
        ],

        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "yum update -y aws-cfn-bootstrap\n",
          "## Nginx setup\n",
          "cp /tmp/nginx/default.conf /etc/nginx/conf.d/default.conf\n",
          "service nginx restart\n",
          "## Should we wait and signal?\n"
        ]]}}
      },

      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "yum" : {
                "nginx"        : []
              }
            },

            "files" : {
              "/tmp/nginx/default.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "upstream jenkins {\n",
                  "server 10.x.x.x:8080 fail_timeout=0;\n",
                  "}\n\n",

                  "server {\n",
                  "listen 8080;\n",
                  "listen [::]:8080 default ipv6only=on;\n",
                  "charset utf-8;\n",

                  "location / {\n",
                  "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n",
                  "proxy_set_header Host $http_host;\n",
                  "proxy_redirect off;\n\n",

                  "if (!-f $request_filename) {\n",
                  "proxy_pass http://10.0.1.203;\n",
                  "break;\n",
                  "}\n",
                  "}\n",
                  "}\n"
                ]]},
                "mode"   : "000755",
                "owner"  : "root",
                "group"  : "root"
              }
            },

            "services" : {
              "sysvinit" : {
                "nginx"    : { "enabled" : "true", "ensureRunning" : "true", "files": ["/etc/nginx/conf.d/default.conf"] }
              }
            }

          }
        }
      }

    }


  },

  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]}, ""]] },
      "Description" : "nginx Installation, we need to hookup route53"
    }
  }
}