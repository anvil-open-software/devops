# Copyright 2018 Dematic, Corp.  # Licensed under the MIT Open Source License: https://opensource.org/licenses/MIT

# to run locally:
# ansible-playbook -i /dematic/git/devops-config/ansible/roles/kafka/inventory/kafka-producer-dev-provision -c local  gcp-provision-producer-private-nodes.yml --private-key /dematic/keys/google/gcp-devops -u devops


# provisions a kafka-producer
# sent from jenkins:
    # cluster_member_private_ips_csv
    # kafka_cluster_name: "dev"

---
- hosts: localhost
  become: no
  vars:
    gcloud_create_parms: "      {{gcloud_default_create_parms}} \
                                {{gcp_image_parms}}  \
                                --boot-disk-size {{gcp_boot_disk_size_in_gb}} \
                                --boot-disk-type {{gcp_boot_disk_type}} \
                                --tags 'kafka-producer','{{private_instance_nat_tag}}' \
                                --metadata 'kafka-producer-id={{producer_cluster_name}},app=kafka-producer,{{gcp_instance_additional_metadata}}'"

  tasks:
    # vars_files appears not to work in 2.1 for relative file path no longer work in vars_files in 2.1.
    - include_vars: "../../../cloud/gcp/group_vars/all"
    - include_vars: "{{gcp_project_var_file}}"

    - name:  "full command for debugging"
      debug: msg= "{{gcloud_create_command}} kafka-producer-{{producer_cluster_name}}-{{ item.replace('.','-') }} \
                                      {{gcloud_create_parms}}  \
                                      --private-network-ip  {{ item }}"
      with_items: "{{cluster_member_private_ips_csv.split(',')}}"

    # note you cannot loop over blocks
    - name: create compute instance
      command:  "{{gcloud_create_command}} kafka-producer-{{producer_cluster_name}}-{{ item.replace('.','-') }} \
                     {{gcloud_create_parms}}  \
                     --private-network-ip  {{ item }}"
      with_items: "{{cluster_member_private_ips_csv.split(',')}}"
      register: results

    # todo redo async for faster
    - name: Wait for SSH to come up
      wait_for: host="{{ item }}" port=22 delay={{ssh_wait_delay_seconds}} timeout={{ssh_timeout_seconds}} state=started
      with_items: "{{cluster_member_private_ips_csv.split(',')}}"



